version: '3.8'

services:
  # Authentication Service (Node.js)
  auth-service:
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - JWT_SECRET=cityplanner_secret_key
    volumes:
      - ./auth:/app
    depends_on:
      - database
    networks:
      - cityplanner-network

  # Planner Agent Service (Python)
  planner-agent:
    build:
      context: ./planner-agent
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - IBM_WATSONX_API_KEY=${IBM_WATSONX_API_KEY}
      - IBM_WATSONX_URL=${IBM_WATSONX_URL}
      - IBM_WATSONX_PROJECT_ID=${IBM_WATSONX_PROJECT_ID}
      - MODEL_NAME=${MODEL_NAME}
    volumes:
      - ./planner-agent:/app
    depends_on:
      - database
    networks:
      - cityplanner-network

  # Simulation Engine Service (Python)
  simulation-engine:
    build:
      context: ./simulation-engine
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
    volumes:
      - ./simulation-engine:/app
    depends_on:
      - database
    networks:
      - cityplanner-network

  # Document Processor Service (Python)
  document-processor:
    build:
      context: ./document-processor
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - WATSONX_APIKEY=${WATSONX_APIKEY}
      - WATSONX_URL=${WATSONX_URL}
      - WATSONX_PROJECT_ID=${WATSONX_PROJECT_ID}
      - EMBEDDING_MODEL_ID=${EMBEDDING_MODEL_ID}
      - CHROMA_PERSIST_DIR=/app/chroma_db
    volumes:
      - ./document-processor:/app
      - chroma-data:/app/chroma_db
    depends_on:
      - database
    networks:
      - cityplanner-network

  # Parser Service (Python)
  parser-service:
    build:
      context: ./parser
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - PORT=8003
    volumes:
      - ./parser:/app
    networks:
      - cityplanner-network

  # Database Service
  database:
    image: postgres:13
    environment:
      - POSTGRES_DB=cityplanner
      - POSTGRES_USER=cityplanner_user
      - POSTGRES_PASSWORD=cityplanner_password
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cityplanner-network

  # API Gateway (Nginx)
  api-gateway:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - planner-agent
      - simulation-engine
      - document-processor
      - parser-service
    networks:
      - cityplanner-network

volumes:
  db-data:
  chroma-data:

networks:
  cityplanner-network:
    driver: bridge